class Solution:
    def compute_lps(pat):
        
        return lps

    def search(self, pat, txt): 
        length = 0
        i = 1
        lps = [0] * len(pat)
        while i < len(pat):
            if pat[i] == pat[length]:
                length += 1
                lps[i] = length
                i += 1
            else:
                if length != 0:
                    length = lps[length - 1]
                else:
                    lps[i] = 0
                    i += 1
        i = j = 0
        indices = []
        while i < len(txt):
            if pat[j] == txt[i]:
                i += 1
                j += 1
            if j == len(pat):
                indices.append(i - j)
                j = lps[j - 1]
            elif i < len(txt) and pat[j] != txt[i]:
                if j != 0:
                    j = lps[j - 1]
                else:
                    i += 1
        return indices
