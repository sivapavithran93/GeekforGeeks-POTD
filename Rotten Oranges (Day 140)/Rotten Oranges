from collections import deque
class Solution:
    def orangesRotting(self, mat):
        if not mat:
            return -1
        n, m = len(mat), len(mat[0])
        fresh_oranges = 0
        rotten_oranges = deque()
        for i in range(n):
            for j in range(m):
                if mat[i][j] == 1:
                    fresh_oranges += 1
                elif mat[i][j] == 2:
                    rotten_oranges.append((i, j))
        if fresh_oranges == 0:
            return 0
        directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]
        time = 0
        while rotten_oranges:
            for _ in range(len(rotten_oranges)):
                x, y = rotten_oranges.popleft()
                for dx, dy in directions:
                    nx, ny = x + dx, y + dy
                    if 0 <= nx < n and 0 <= ny < m and mat[nx][ny] == 1:
                        mat[nx][ny] = 2
                        fresh_oranges -= 1
                        rotten_oranges.append((nx, ny))
            time += 1
        return time - 1 if fresh_oranges == 0 else -1
