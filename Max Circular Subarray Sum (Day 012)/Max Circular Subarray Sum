def circularSubarraySum(arr):
    def max_subarray_sum(arr):
        max_so_far = arr[0]
        max_ending_here = arr[0]
        for i in range(1, len(arr)):
            max_ending_here = max(arr[i], max_ending_here + arr[i])
            max_so_far = max(max_so_far, max_ending_here)
        return max_so_far

    def total_sum(arr):
        return sum(arr)

    def min_subarray_sum(arr):
        min_so_far = arr[0]
        min_ending_here = arr[0]
        for i in range(1, len(arr)):
            min_ending_here = min(arr[i], min_ending_here + arr[i])
            min_so_far = min(min_so_far, min_ending_here)
        return min_so_far
    total_sum_value = total_sum(arr)
    max_sum_value = max_subarray_sum(arr)
    min_sum_value = min_subarray_sum(arr)
    if total_sum_value == min_sum_value:
        return max_sum_value
    return max(max_sum_value, total_sum_value - min_sum_value)
