import heapq

class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
    def __lt__(self, other):
        return self.val < other.val
class Solution:
    def mergeKLists(self, arr):
        min_heap = []
        for head in arr:
            if head:
                heapq.heappush(min_heap, head)
        dummy = ListNode()
        current = dummy
        while min_heap:
            smallest = heapq.heappop(min_heap)
            current.next = smallest
            current = current.next
            if smallest.next:
                heapq.heappush(min_heap, smallest.next)
        return dummy.next
